name: CI

on:
  push:
    branches: [ "main", "master" ]
  pull_request:
    branches: [ "main", "master" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-14]
        rust: [stable, beta]
        exclude:
          # Temporarily exclude macOS beta due to macOS 15 migration issues
          - os: macos-14
            rust: beta
        
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: ${{ matrix.rust }}
        components: rustfmt, clippy

    # No submodules needed - rustboxd is now from crates.io

    # Run cargo fmt check BEFORE restoring caches so formatting errors surface fast
    - name: Check formatting
      run: cargo fmt -- --check

    # No system dependencies needed for pure Rust build

    # No system dependencies needed for pure Rust build on macOS

    # No Python dependencies needed - using pure Rust with rustboxd
        
    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
        
    - name: Cache cargo index
      uses: actions/cache@v4
      with:
        path: ~/.cargo/git
        key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
        
    # Make cargo build cache key include runner.os, matrix.os, and matrix.rust
    - name: Cache cargo build
      uses: actions/cache@v4
      with:
        path: target
        key: ${{ runner.os }}-${{ matrix.os }}-${{ matrix.rust }}-cargo-build-${{ hashFiles('**/Cargo.lock') }}
        
    - name: Run tests
      run: cargo test --verbose
      
    # Enforce clippy warnings on stable with -D warnings, allow beta to continue on error
    - name: Run clippy
      run: cargo clippy --all-targets -- -D warnings
      continue-on-error: ${{ matrix.rust != 'stable' }}

    - name: Test build
      run: cargo build --release