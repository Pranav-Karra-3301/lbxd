name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    name: Release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: lbxd
            asset_name: lbxd-linux-x86_64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: lbxd.exe
            asset_name: lbxd-windows-x86_64.exe
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: lbxd
            asset_name: lbxd-macos-x86_64
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact_name: lbxd
            asset_name: lbxd-macos-aarch64

    steps:
    - uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}

    - name: Build release
      run: cargo build --release --target ${{ matrix.target }}

    - name: Strip binary (unix)
      if: matrix.os != 'windows-latest'
      run: strip target/${{ matrix.target }}/release/${{ matrix.artifact_name }}

    - name: Create archive (unix)
      if: matrix.os != 'windows-latest'
      run: |
        cd target/${{ matrix.target }}/release
        tar czvf ../../../${{ matrix.asset_name }}.tar.gz ${{ matrix.artifact_name }}
        cd -

    - name: Create archive (windows)
      if: matrix.os == 'windows-latest'
      run: |
        cd target/${{ matrix.target }}/release
        7z a ../../../${{ matrix.asset_name }}.zip ${{ matrix.artifact_name }}
        cd -

    - name: Upload binaries to release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: ${{ matrix.asset_name }}.*
        file_glob: true
        tag: ${{ github.ref }}
        overwrite: true